// margin class mixins will produce classes in a 'margin-t-5' format (margin-top: 5px)
@mixin generate-spacing-classes(
  $default-space-top
) {
  @each $space in $default-space-top {
    .margin-#{nth($space, 2)}--#{nth($space, 3)} {
      margin-#{nth($space, 2)}: #{nth($space, 1)};
    }
    .padding-#{nth($space, 2)}--#{nth($space, 3)} {
      padding-#{nth($space, 2)}: #{nth($space, 1)};
    }
  }
}

@include generate-spacing-classes($default-space-top);
@include generate-spacing-classes($space-right);
@include generate-spacing-classes($space-bottom);
@include generate-spacing-classes($space-left);
// font-size, margin and padding general mixins (bulma also has classes from 1-7 in the format is-size-$variable but they are x0.5/0.25 in size)
@mixin generate-sizes($sizes) {
  @each $size in $sizes {
    .font-size--#{nth($size, 2)} {
      font-size: #{nth($size, 1)};
    }
    // Margin: all, top/bottom, left/right
    .margin-all--#{nth($size, 2)} {
      margin: #{nth($size, 1)};
    }
    .margin-t-b--#{nth($size, 2)} {
      margin-top: #{nth($size, 1)};
      margin-bottom: #{nth($size, 1)};
    }
    .margin-l-r--#{nth($size, 2)} {
      margin-left: #{nth($size, 1)};
      margin-right: #{nth($size, 1)};
    }
    // Padding: all, top/bottom, left/right
    .padding-all--#{nth($size, 2)} {
      padding: #{nth($size, 1)};
    }
    .padding-t-b--#{nth($size, 2)} {
      padding-top: #{nth($size, 1)};
      padding-bottom: #{nth($size, 1)};
    }
    .padding-l-r--#{nth($size, 2)} {
      padding-left: #{nth($size, 1)};
      padding-right: #{nth($size, 1)};
    }
  }
}

@include generate-sizes($sizes);